@startuml client_redux
!theme crt-green

enum Action{
    KeyPress{key_press: KeyPressAction}

    LoadChats
    LoadChatsSuccesses{chats: Vec<Chat>}
    LoadChatsFail{err: Error}

    LoadChat
    LoadChatSuccesses{chat: Chat}
    LoadChatFail{err: Error}

    LoadUsers
    LoadUsersSuccesses{users: Vec<User>}
    LoadUsersFail{err: Error}

    LoadUser
    LoadUserSuccesses{user: User}
    LoadUserFail{err: Error}

    CreateChat{name: String}
    CreateChatSuccesses{id: i32}
    CreateChatFail{err: Error}

    CreateInvite{invite: Invite}
    CreateInviteSuccesses
    CreateInviteFail{err: Error}

    AnswerInvite{answer: InviteAnswer}
    AnswerInviteSuccesses{invite: Invite}
    AnswerInviteFail{err: Error}

    ReceiveInvite{invite: Invite}
    
    SendMessage{message: Message}
    SendMessageSuccesses
    SendMessageFail{err: Error}

    ReceiveMessage{message: Message}
}

interface Store{
    + dispatch(action: Action)
    + select() -> AppState
}

struct StoreImpl

StoreImpl --|> Store : implements

interface Reducer{
    + condition(action: Action, state: AppState)
    + reduce(action: Action, state: AppState) -> AppState
}

interface ReducerVecFactory{
    + create() -> Vec<Reducer>
}

struct ReducerVecFactoryImpl

ReducerVecFactoryImpl --|> ReducerVecFactory : implements

ReducerVecFactory --o StoreImpl

Reducer --o StoreImpl

struct EditReducer

EditReducer --|> Reducer : implements
EditReducer --o ReducerVecFactoryImpl

struct NavigationReducer

NavigationReducer --|> Reducer : implements
NavigationReducer --o ReducerVecFactoryImpl

struct LoadChatsReducer

LoadChatsReducer --|> Reducer : implements
LoadChatsReducer --o ReducerVecFactoryImpl

@enduml