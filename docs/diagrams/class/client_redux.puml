@startuml client_redux
!theme crt-green

struct State {
    + tab_state
    + auth_state
    + code
    + link
    + messages
    + should_exit
    ...
}

interface View {
    + draw(&self, frame, rect, state) -> Result<()>
}

interface Store {
    + get_dispatch(&self) -> Sender<Action>
    + get_select(&self) -> Receiver<State>
    + process(&self, handle) -> Result<()>
}

interface Reducer {
    + reduce(&self, state, action, dispatch_tx, handle) -> ReduceResult
}

interface AppReducer {}

AppReducer ..|> Reducer
AppReducer --* Store

interface LoginReducer {}

LoginReducer ..|> Reducer
LoginReducer --* AppReducer

interface ChatsReducer {}

ChatsReducer ..|> Reducer
ChatsReducer --* AppReducer

interface MessagesReducer {}

MessagesReducer ..|> Reducer
MessagesReducer --* ChatsReducer

enum ReduceResult {
    + Consumed{State}
    + ConsumedButKindaNot
    + Ignored
}

enum Action {
    + Input{Event}
    + StartLogin
    + Login{StartFlowResponse}
    + LoginSuccess{AuthState}
    + Tick
}

@enduml